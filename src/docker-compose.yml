services:
  # === INFRASTRUCTURE SERVICES ===
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: planbookai_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: planbookai2024
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"      # AMQP protocol
      - "15672:15672"    # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # === APPLICATION SERVICES ===
  authservice:
    image: ${DOCKER_REGISTRY-}authservice
    build:
      context: AuthService
      dockerfile: Dockerfile
    ports:
      - "8081:8081"

  gatewayservice:
    image: ${DOCKER_REGISTRY-}gatewayservice
    build:
      context: GatewayService
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      authservice:
        condition: service_started

  planservice:
    image: ${DOCKER_REGISTRY-}planservice
    build:
      context: PlanService
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      rabbitmq:
        condition: service_healthy

  userservice:
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: UserService
      dockerfile: Dockerfile
    ports:
      - "8082:8082"

  examservice:
    image: ${DOCKER_REGISTRY-}examservice
    build:
      context: ExamService
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      rabbitmq:
        condition: service_healthy

  classroomservice:
    image: ${DOCKER_REGISTRY-}classroomservice
    build:
      context: ClassroomService
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      rabbitmq:
        condition: service_healthy

  filestorageservice:
    image: ${DOCKER_REGISTRY-}filestorageservice
    build:
      context: FileStorageService
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    depends_on:
      rabbitmq:
        condition: service_healthy

  notificationservice:
    image: ${DOCKER_REGISTRY-}notificationservice
    build:
      context: NotificationService
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    depends_on:
      rabbitmq:
        condition: service_healthy

  ocrservice:
    image: ${DOCKER_REGISTRY-}ocrservice
    build:
      context: OCRService
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    depends_on:
      rabbitmq:
        condition: service_healthy

  studentgradingservice:
    image: ${DOCKER_REGISTRY-}studentgradingservice
    build:
      context: StudentGradingService
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    depends_on:
      rabbitmq:
        condition: service_healthy

  aiplanservice:
    image: ${DOCKER_REGISTRY-}aiplanservice
    build:
      context: AIPlanService
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    depends_on:
      rabbitmq:
        condition: service_healthy

  logservice:
    image: ${DOCKER_REGISTRY-}logservice
    build:
      context: LogService
      dockerfile: Dockerfile
    ports:
      - "8091:8091"
    depends_on:
      rabbitmq:
        condition: service_healthy

volumes:
  rabbitmq_data:

