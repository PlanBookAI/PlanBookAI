# ==================== DOCKER COMPOSE - RUN DLL ====================
# Docker Compose để chạy DLL đã build sẵn
version: '3.8'

services:
  # === INFRASTRUCTURE SERVICES ===
  postgres:
    image: postgres:17
    container_name: planbookai-postgres-dev
    environment:
      POSTGRES_DB: planbookai
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../scripts:/scripts:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d planbookai"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - planbookai-network

  # === DATABASE MIGRATION SERVICE ===
  db-migration:
    image: postgres:17
    container_name: planbookai-db-migration
    environment:
      POSTGRES_DB: planbookai
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test123
      PGHOST: postgres
      PGPORT: 5432
    volumes:
      - ../scripts:/scripts:ro
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        until pg_isready -h postgres -p 5432 -U test; do
          echo 'Database not ready, waiting...'
          sleep 2
        done &&
        echo 'Database is ready. Running migration...' &&
        psql -h postgres -U test -d planbookai -f /scripts/bpa.sql &&
        echo 'Migration completed successfully!'
      "
    networks:
      - planbookai-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: planbookai_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: planbookai2024
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"      # AMQP protocol
      - "15672:15672"    # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - planbookai-network

  # === APPLICATION SERVICES (RUN DLL) ===
  authservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_authservice
    working_dir: /app
    volumes:
      - ./AuthService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - planbookai-network
    command: ["dotnet", "AuthService.dll"]

  gatewayservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_gatewayservice
    working_dir: /app
    volumes:
      - ./GatewayService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      authservice:
        condition: service_started
    networks:
      - planbookai-network
    command: ["dotnet", "GatewayService.dll"]

  planservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_planservice
    working_dir: /app
    volumes:
      - ./PlanService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8083:8083"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8083
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - planbookai-network
    command: ["dotnet", "PlanService.dll"]

  userservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_userservice
    working_dir: /app
    volumes:
      - ./UserService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8082:8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8082
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - planbookai-network
    command: ["dotnet", "UserService.dll"]

  examservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_examservice
    working_dir: /app
    volumes:
      - ./ExamService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8084:8084"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8084
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - planbookai-network
    command: ["dotnet", "ExamService.dll"]

  classroomservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_classroomservice
    working_dir: /app
    volumes:
      - ./ClassroomService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8085:8085"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8085
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - planbookai-network
    command: ["dotnet", "ClassroomService.dll"]

  filestorageservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_filestorageservice
    working_dir: /app
    volumes:
      - ./FileStorageService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8086:8086"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8086
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - planbookai-network
    command: ["dotnet", "FileStorageService.dll"]

  notificationservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_notificationservice
    working_dir: /app
    volumes:
      - ./NotificationService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8087:8087"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8087
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - planbookai-network
    command: ["dotnet", "NotificationService.dll"]

  studentgradingservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_studentgradingservice
    working_dir: /app
    volumes:
      - ./StudentGradingService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8089:8089"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8089
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - planbookai-network
    command: ["dotnet", "StudentGradingService.dll"]

  logservice:
    image: mcr.microsoft.com/dotnet/aspnet:9.0-alpine
    container_name: planbookai_logservice
    working_dir: /app
    volumes:
      - ./LogService/bin/Release/net9.0/publish:/app:ro
    ports:
      - "8091:8091"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8091
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - planbookai-network
    command: ["dotnet", "LogService.dll"]

volumes:
  rabbitmq_data:
  postgres_data:

networks:
  planbookai-network:
    driver: bridge