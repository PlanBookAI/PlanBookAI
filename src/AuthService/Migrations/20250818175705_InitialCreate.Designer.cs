// <auto-generated />
using System;
using AuthService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuthService.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20250818175705_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuthService.Models.Entities.NguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool>("HoatDong")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("LanDangNhapCuoi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login");

                    b.Property<string>("MatKhauMaHoa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password_hash");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("VaiTroId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("VaiTroId");

                    b.ToTable("users", "auth");
                });

            modelBuilder.Entity("AuthService.Models.Entities.PhienDangNhap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("HetHanLuc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires_at");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("NguoiDungId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("sessions", "auth");
                });

            modelBuilder.Entity("AuthService.Models.Entities.VaiTro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("HoatDong")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("MoTa")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Ten")
                        .IsUnique();

                    b.ToTable("roles", "auth");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HoatDong = true,
                            MoTa = "Quản trị viên hệ thống",
                            NgayCapNhat = new DateTime(2025, 8, 18, 17, 57, 4, 879, DateTimeKind.Utc).AddTicks(4243),
                            NgayTao = new DateTime(2025, 8, 18, 17, 57, 4, 879, DateTimeKind.Utc).AddTicks(4238),
                            Ten = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            HoatDong = true,
                            MoTa = "Quản lý nội dung và người dùng",
                            NgayCapNhat = new DateTime(2025, 8, 18, 17, 57, 4, 879, DateTimeKind.Utc).AddTicks(5100),
                            NgayTao = new DateTime(2025, 8, 18, 17, 57, 4, 879, DateTimeKind.Utc).AddTicks(5100),
                            Ten = "MANAGER"
                        },
                        new
                        {
                            Id = 3,
                            HoatDong = true,
                            MoTa = "Nhân viên tạo nội dung mẫu",
                            NgayCapNhat = new DateTime(2025, 8, 18, 17, 57, 4, 879, DateTimeKind.Utc).AddTicks(5103),
                            NgayTao = new DateTime(2025, 8, 18, 17, 57, 4, 879, DateTimeKind.Utc).AddTicks(5103),
                            Ten = "STAFF"
                        },
                        new
                        {
                            Id = 4,
                            HoatDong = true,
                            MoTa = "Giáo viên sử dụng hệ thống",
                            NgayCapNhat = new DateTime(2025, 8, 18, 17, 57, 4, 879, DateTimeKind.Utc).AddTicks(5104),
                            NgayTao = new DateTime(2025, 8, 18, 17, 57, 4, 879, DateTimeKind.Utc).AddTicks(5104),
                            Ten = "TEACHER"
                        });
                });

            modelBuilder.Entity("AuthService.Models.Entities.NguoiDung", b =>
                {
                    b.HasOne("AuthService.Models.Entities.VaiTro", "VaiTro")
                        .WithMany("DanhSachNguoiDung")
                        .HasForeignKey("VaiTroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("AuthService.Models.Entities.PhienDangNhap", b =>
                {
                    b.HasOne("AuthService.Models.Entities.NguoiDung", "NguoiDung")
                        .WithMany("DanhSachPhienDangNhap")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("AuthService.Models.Entities.NguoiDung", b =>
                {
                    b.Navigation("DanhSachPhienDangNhap");
                });

            modelBuilder.Entity("AuthService.Models.Entities.VaiTro", b =>
                {
                    b.Navigation("DanhSachNguoiDung");
                });
#pragma warning restore 612, 618
        }
    }
}
